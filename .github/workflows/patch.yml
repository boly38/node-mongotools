# mongotools create patch from 'main' branch
name: patch
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 20.x ]

    steps:
      - name: Check GitHub CLI
        run: gh --version

      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          # version from package.json
          run_install: false

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v5
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Patch
        run: |
          git config --global user.email  'github-actions[bot]@users.noreply.github.com'
          git config --global user.name 'github-actions[bot]'
          git fetch --all
          git checkout main
          pnpm version patch
          git branch -f npmjs
          git push -f origin main npmjs --tags

      - name: Create draft release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_ACTIONS_TOKEN }}
        run: |
          # Extract version from package.json
          VERSION=$(node -p "require('./package.json').version")
          
          echo "üîñ Creating draft release for version v$VERSION"
          
          # Optionally check if release already exists
          if gh release view "v$VERSION" > /dev/null 2>&1; then
            echo "::warning title=‚ÑπÔ∏è Release v$VERSION already exists, skipping."
          else
            gh release create "v$VERSION" --draft --generate-notes
            echo "::notice title=‚úÖ Draft release v$VERSION created."
          fi